#!/usr/bin/env ruby
# Copyright (c) 2005, Gennady Bystritsky <bystr@mac.com>
# 
# Distributed under the MIT Licence.
# This is free software. See 'LICENSE' for details.
# You must read and accept the license prior to use.

$:.concat ENV.to_hash['PATH'].to_s.split(':')
require 'tsc/application.rb'
require 'tsc/path.rb'

class Application < TSC::Application
  def initialize
    super { |_conf|
      _conf.description = 'Subversion hook driver.'
      _conf.arguments = '<parameter> ...'
      _conf.options = [
        [ '--path', 'SVN Repository path', 'path', '-p' ],
        [ '--revision', 'SVN revision number', 'number', '-r' ],
        [ '--transaction', 'SVN transaction number', 'number', '-t' ],
        [ '--action', 'Hook action (pre-commit, post-commit, etc.)', 'action', '-a' ],
        [ '--config', 'Configuration file', 'path', '-c' ]
      ]
    }
    @actions = Hash.new { |_hash, _key|
      size = Array(_key).size
      raise TSC::UsageError, "A single action expected, #{size} specified" unless size == 1
      raise "Unsupported action #{_key.inspect}"
    }
    @actions.update Hash[
      'post-commit' => proc { |*_args|
        process_post_commit *_args
      },
      'pre-commit' => proc { |*_args|
        process_pre_commit *_args
      }
    ]
  end

  def start
    handle_errors {
      process_command_line
      fix_environment

      require 'sk/svn/hook/config.rb'
      processor = @actions[action]

      path = ARGV.shift || options['path'] or raise 'Repository path not specified'
      base, depot = File.split(path)

      if base != config.repository_base
        raise 'Specified repository not under configured base location'
      end

      processor.call depot
    }
  end

  private
  #######

  def action
    @action ||= begin
      options['action'] || begin
        script_name
      end
    end
  end

  def process_post_commit(depot)
    require 'sk/svn/hook/manager.rb'

    revision = ARGV.shift || options['revision'] or raise 'Revision not specified'
    SK::Svn::Hook::Manager.new(script_name, config, depot).process(revision)
  end

  def process_pre_commit(depot)
    require 'sk/svn/hook/transaction-processor.rb'

    transaction = ARGV.shift || options['transaction'] or raise 'Transaction not specified'
    SK::Svn::Hook::TransactionProcessor.new(script_name, config, depot).process(transaction)
  end

  def fix_environment
    ENV['LOGNAME'] = user.name
    ENV['HOME'] = user.dir

    $:.concat TSC::PATH.current.front(location, '/bin', '/usr/bin').install.entries
  end

  def location
    @location ||= begin
      File.symlink?(__FILE__) ? File.dirname(File.readlink(__FILE__)) : script_location
    end
  end

  def user
    @user ||= begin
      require 'etc'
      Etc.getpwuid
    end
  end

  def config
    @config ||= begin
      SK::Svn::Hook::Config.new(options['config'] || File.join(user.dir, 'conf', "#{action}.yaml"))
    end
  end

  in_generator_context do |_content|
    _content << '#!' + figure_ruby_path
    _content << TSC::PATH.current.front(installation_tools_bin, File.join(self.class.installation_top, 'bin')).to_ruby_eval
    _content << IO.readlines(__FILE__).slice(1..-1)
  end
end

Application.new.start
