#!/usr/bin/env ruby
# Copyright (c) 2005, Gennady Bystritsky <bystr@mac.com>
# 
# Distributed under the MIT Licence.
# This is free software. See 'LICENSE' for details.
# You must read and accept the license prior to use.

$:.concat ENV.to_hash['PATH'].to_s.split(':')

require 'tsc/application.rb'
require 'tsc/errors.rb'
require 'tsc/path.rb'

class Application < TSC::Application

  def initialize
    super('<repository path> ...',
      [ '--test', 'Run internal tests', nil ]
    )
  end

  def start
    handle_errors(Exception) {
      process_command_line

      $: << script_location

      throw :TEST if options.has_key?('test')
      require 'sk/svn/build/manager.rb'

      TSC::Error.persist { |_operations|
        ARGV.each do |_repository|
          _operations.add {
            manager = SK::Svn::Build::Manager.new(_repository)
            manager.make
          }
        end
      }
    }
  end

  in_generator_context do |_content|
    _content << '#!' + figure_ruby_path
    _content << TSC::PATH.current.front(File.dirname(figure_ruby_path)).to_ruby_eval
    _content << IO.readlines(__FILE__).slice(1..-1)
  end

end

unless defined? Test::Unit::TestCase
  catch :TEST do
    Application.new.start
    exit 0
  end
end

require 'test/unit'

class ApplicationTest < Test::Unit::TestCase
  def test_something
    flunk 'Not implemented'
  end

  def setup
    @app = Application.new
  end

  def teardown
    @app = nil
  end
end
